(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{505:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"linux常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux常用命令"}},[t._v("#")]),t._v(" linux常用命令")]),t._v(" "),a("ul",[a("li",[t._v("tar")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" cvf etcbak.tar etc/ // 打包一个tar\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xvf etcbak.tar // 解压一个tar\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" cvzf etcbak.tar.gz etc/ // 打包压缩一个tar\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxvf etcbak.tar.gz // 解压一个tar\n")])])]),a("ul",[a("li",[t._v("cp [options] 源文件(source) 目标文件(destination)")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("-a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 相当于dpr参数组合，至于dpr请参考下列说明；（常用）\n-d "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 若源文件为链接文件的属性（link file）,则复制链接文件属性而不是文件本身\n-f, --force "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 若目标文件已经存在，则直接覆盖且没有提示；\n-i,--interactive 与-f选项不同，在覆盖目标文件之前先给出提示，要求用户予以确定。回答y时目标文件将被覆盖。\n-p: 除复制源文件的内容外，还将其修改时间和存取权限也复制到新文件中。\n-R,-r： 递归复制目录，即将源目录下的所有文件及其各级子目录都复制到目标位置。\n-l: 不复制，而是创建指向源文件的链接文件，链接文件名由目标文件给出。  \n")])])]),a("ul",[a("li",[a("p",[t._v("rm命令 rm [选项] 文件列表")]),t._v(" "),a("p",[a("strong",[t._v("该命令删除指定的文件，默认情况下，它不能删除目录。如果没有给出选项-f或--force，该命令删除文件之前会提示用户是否删除该文件；如果用户没有回答y或者Y，则不删除文件")])])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("-f,--force 忽略不存的的文件，并且不给出提示信息。\n-r, -R, --recursive 递归地删除指定目录及其下属的各级子目录和相应的文件。\n-i 交互式删除文件。\n")])])]),a("ul",[a("li",[t._v("mv命令 mv [选项] source target")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("-i,--interactive 交互式操作。如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。用户输入y，表示将覆盖目标文件；输入n,表示取消对源文件的移动。这样可以避免误将文件覆盖。\n-f 与-i相反，它禁止交互式操作。在覆盖已有的目录文件时，不给出任何提示；\n")])])]),a("ul",[a("li",[t._v("ssh 用于登录远程主机")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-p port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user@remote\n user 是在远程机器上的用户名，如果不指定的话默认为当前用户\n remote是远程机器的地址，可以是IP/域名，或者是别名\n port是SSH Server监听的端口，如果不指定，就为默认值22\n")])])]),a("ul",[a("li",[t._v("find 命令格式")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" path -options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-print"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-exec -ok "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" grep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ol",[a("li",[t._v("path:要找的目录路径")])]),t._v(" "),a("ul",[a("li",[t._v("~ 表示$HOME目录")]),t._v(" "),a("li",[t._v(".表示当前目录")]),t._v(" "),a("li",[t._v("/表示根目录")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("print: 表示将结果输出到标准输出。")])]),t._v(" "),a("li",[a("p",[t._v("exec:对匹配的文件执行该参数所给出的shell命令。")])])]),t._v(" "),a("p",[t._v("​\t形式为command {} ; "),a("strong",[t._v("注意{}与;之间有空格")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("ok: 与exec作用相同，起承接作用")])]),t._v(" "),a("p",[t._v("​\t区别在于，在执行命令之前，都会给出提示，让用户确认是否执行")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("|xargs与exec作用相同，起承接作用")])]),t._v(" "),a("p",[t._v("​\t区别在于|xargs主要用于承接删除操作，而-exec都可用 如复制、移动、重命名等")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("options: 表示查找方式")])]),t._v(" "),a("p",[t._v("​\toptions常用的选项如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("-name filename "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查找名为filename的文件")]),t._v("\n-perm "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按执行权限来查找")]),t._v("\n-user username "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按文件属主来查找")]),t._v("\n-group groupname "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按组来查找")]),t._v("\n-mtime -n +n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按文件更改时间来查找文件，-n指n天以内，+n指n天以前")]),t._v("\n-atime -n +n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按文件访问时间来查找文件，-n指n天以内，+n指n天以前")]),t._v("\n-ctime -n +n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按文件创建时间来查找文件，-n指n天以内，+n指n天以前")]),t._v("\n-prune "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略某个目录")]),t._v("\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" / -mtime "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" //找5天前的那一天被更改过的档案名。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" / -mtime +5 // 找5天之前被更改过的档案名。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" / -mtime -5 // 找5天前的那一天被更改过的档案名。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" / -mtime "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" // 将系统24小时内更改过内容的档案列出。\n")])])]),a("ul",[a("li",[a("p",[t._v("df 查看文件系统硬盘使用情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("df")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("目录或文件名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("选项")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-a")]),t._v(" "),a("td",[t._v("显示所有文件系统信息，包括系统特有的 /proc、/sysfs 等文件系统；")])]),t._v(" "),a("tr",[a("td",[t._v("-m")]),t._v(" "),a("td",[t._v("以 MB 为单位显示容量；")])]),t._v(" "),a("tr",[a("td",[t._v("-k")]),t._v(" "),a("td",[t._v("以 KB 为单位显示容量，默认以 KB 为单位；")])]),t._v(" "),a("tr",[a("td",[t._v("-h")]),t._v(" "),a("td",[t._v("使用人们习惯的 KB、MB 或 GB 等单位自行显示容量；")])]),t._v(" "),a("tr",[a("td",[t._v("-T")]),t._v(" "),a("td",[t._v("显示该分区的文件系统名称；")])]),t._v(" "),a("tr",[a("td",[t._v("-i")]),t._v(" "),a("td",[t._v("不用硬盘容量显示，而是以含有 inode 的数量来显示。")])])])])]),t._v(" "),a("li",[a("p",[t._v("chmod 改变一个或多个文件的存取模式(mode)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" mode files\n")])])]),a("p",[a("strong",[t._v("mode：")]),t._v("\n可以是数字形式或以who opcode permission形式表示。who是可选的，默认是a(所有用户)。只能选择一个opcode(操作码)。可指定多个mode，以逗号分开。")]),t._v(" "),a("blockquote",[a("p",[t._v("综上，包含options、who、opcode、permission等选项，下面分别进行介绍")])]),t._v(" "),a("p",[t._v("options:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("标识")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-c，–changes")]),t._v(" "),a("td",[t._v("只输出被改变文件的信息")])]),t._v(" "),a("tr",[a("td",[t._v("-f，–silent，–quiet")]),t._v(" "),a("td",[t._v("当chmod不能改变文件模式时，不通知文件的用户")])]),t._v(" "),a("tr",[a("td",[t._v("–help")]),t._v(" "),a("td",[t._v("输出帮助信息。")])]),t._v(" "),a("tr",[a("td",[t._v("-R，–recursive")]),t._v(" "),a("td",[t._v("可递归遍历子目录，把修改应到目录下所有文件和子目录")])]),t._v(" "),a("tr",[a("td",[t._v("–reference=filename")]),t._v(" "),a("td",[t._v("参照filename的权限来设置权限")])]),t._v(" "),a("tr",[a("td",[t._v("-v，–verbose")]),t._v(" "),a("td",[t._v("无论修改是否成功，输出每个文件的信息")])]),t._v(" "),a("tr",[a("td",[t._v("–version")]),t._v(" "),a("td",[t._v("输出版本信息")])])])]),t._v(" "),a("p",[a("strong",[t._v("who")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("标识")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("u")]),t._v(" "),a("td",[t._v("用户")])]),t._v(" "),a("tr",[a("td",[t._v("g")]),t._v(" "),a("td",[t._v("组")])]),t._v(" "),a("tr",[a("td",[t._v("o")]),t._v(" "),a("td",[t._v("其它")])]),t._v(" "),a("tr",[a("td",[t._v("a")]),t._v(" "),a("td",[t._v("所有用户(默认)")])])])]),t._v(" "),a("p",[a("strong",[t._v("opcode")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("标识")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("增加权限")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("删除权限")])]),t._v(" "),a("tr",[a("td",[t._v("=")]),t._v(" "),a("td",[t._v("重新分配权限")])])])]),t._v(" "),a("p",[a("strong",[t._v("permission")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("标识")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("r")]),t._v(" "),a("td",[t._v("读")])]),t._v(" "),a("tr",[a("td",[t._v("w")]),t._v(" "),a("td",[t._v("写")])]),t._v(" "),a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("执行")])]),t._v(" "),a("tr",[a("td",[t._v("s")]),t._v(" "),a("td",[t._v("设置用户(或组)的ID号")])]),t._v(" "),a("tr",[a("td",[t._v("t")]),t._v(" "),a("td",[t._v("设置粘着位(sticky bit)，防止文件或目录被非属主删除")])])])]),t._v(" "),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("chmod u+x file                　给file的属主增加执行权限\n")])])])]),t._v(" "),a("li",[a("p",[t._v("lsof 是list open files的简称。它的参数很多，但是我们这里只介绍一些实用的用法（注意有些情况需要root权限执行）。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" abc.txt 显示开启文件abc.txt的进程\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -i :22 知道22端口现在运行什么程序\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -c abc 显示abc进程现在打开的文件\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -g gid 显示归属gid的进程情况\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" +d /usr/local/ 显示目录下被进程开启的文件\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" +D /usr/local/同上，但是会搜索目录下的目录，时间较长\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -d "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 显示使用fd为4的进程\n")])])])]),t._v(" "),a("li",[a("p",[t._v("curl 是一个利用URL规则在命令行下工作的文件传输工具。它支持文件的上传和下载")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("curl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n-F/--form "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t模拟http表单提交数据\n   --form-string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t模拟http表单提交数据\n-o/--output\t把输出写到该文件中\n-O/--remote-name\t把输出写到该文件中，保留远程文件的文件名\n\neg:\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://127.0.0.1:8080 -o file.txt --progress "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用选项 -o 将下载的数据写入到文件 并使用 --progress 显示进度条")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -F "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("avatar")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("@dist.tar.gz "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29.2")]),t._v(".221.176/ishare/profile "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#模拟http表单提交，将文件dist.tar.gz上传到29.2.221.176/ishare/profile接口服务")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("wget 是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具, wget工具体积小但功能完善，它支持断点下载功能，同时支持FTP和HTTP下载方式，支持代理服务器和设置起来方便简单。下面我们以实例的形式说明怎么使用wget。")]),t._v(" "),a("p",[t._v("安装方式：yum install wget")]),t._v(" "),a("p",[a("strong",[t._v("主要使用如下：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://mirrors.163.com/.help/CentOS7-Base-163.repo "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用wget下载单个文件 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -O wordpress.zip http://www.centos.bz/download.php?id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用wget -O下载并以不同的文件名保存 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" –limit-rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("300k http://cn.wordpress.org/wordpress-3.1-zh_CN.zip "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用wget –limit -rate限速下载 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -c http://cn.wordpress.org/wordpress-3.1-zh_CN.zip  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用wget -c断点续传 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -b http://cn.wordpress.org/wordpress-3.1-zh_CN.zip "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用wget -b后台下载 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -o download.log URL "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用wget -o把下载信息存入日志文件 ")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("ls命令用于显示文件目录列表， 当不加参数时，默认列出当前目录的列表信息。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("目录或文件名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n参数：\n-a：--all的缩写，显示所有的文件，包括隐藏文件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("以.开头的文件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，参考示例1。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("常用"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-A：--almost-all的缩写，显示所有的文件，包括隐藏文件，但不包括表示当前目录.和上级目录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("这两个文件，参考示例2。\n-c：和-lt一起使用：显示列表并且以ctime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("文件状态最后改变时间"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("排序。和-l一起使用：显示ctime并且以文件名排序。其他情况，以ctime排序。参考示例3。\n-d：--directory的缩写，仅列出目录本身，而不是列出目录里的内容列表，参考示例4。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("常用"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-f：直接列出结果，而不进行排序"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ls默认会以文件名排序"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WHEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：是否根据文件类型显示颜色，WHEN可以为never、always或者auto\n--full-time：以完整的实际模式显示"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("包含年月日时分"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，类似与ls -l --time-style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("full-iso，参考示例5。\n-g：列表显示结果，和-l类似，但是不显示文件所属者。\n-h：将文件内容大小以GB、KB等易读的方式显示，参考示例6。\n-i：结合-l参数，列出每个文件的inode，参考示例7。\n-l：列出长数据串，显示出文件的属性与权限等数据信息"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("常用"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-n：和-l类似，只是显示的所属用户和组不是名称而是对应的id，参考示例8。\n-r：--reverse，将排序结果以倒序方式显示，参考示例9。\n-S：以文件大小排序，参考示例9。\n-t：以修改时间排序\n--help：显示帮助信息\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出所有文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -A "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出所有的文件，但不包括表示当前目录.和上级目录..这两个文件。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -clt "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示列表并且以ctime排序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -d /home   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#仅列出/home目录本身")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" /home   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出/home目录里的内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" --full-time / "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示完整时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -l "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以易读方式显示列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -lh "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将文件内容大小以GB、KB等易读的方式显示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -il "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看建立的软链接")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("rm 命令用于删除一个文件或者目录。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" name\n-i 删除前逐一询问确认。\n-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。\n-r 将目录及以下之档案亦逐一删除。\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v("  -r  * "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除当前目录下的所有文件及目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf home/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不询问直接删除home目录下的所有文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除软链接")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("kill")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("进程号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n-a  当处理当前进程时，不限制命令名和进程号的对应关系\n-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号\n-s  指定发送信号\n-u  指定用户 \n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先用ps查找进程，然后用kill杀掉")]),t._v("\n root      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3268")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2884")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":21 pts/1    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" install.log\n root      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3370")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2822")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":21 pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3268")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用kill杀掉3268这个进程")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" –9 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3268")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#彻底杀死进程")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("netstat命令用于显示网络状态。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-acCeFghilMnNoprstuvVwx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-A"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("网络类型"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n-a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("显示所有选项，默认不显示LISTEN相关\n-t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("仅显示tcp相关选项\n-u "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("udp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("仅显示udp相关选项\n-n 拒绝显示别名，能显示数字的全部转化成数字。\n-l 仅列出有在 Listen "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("监听"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 的服务状态\n-p 显示建立相关链接的程序名\n-r 显示路由信息，路由表\n-e 显示扩展信息，例如uid等\n-s 按各个协议进行统计\n-c 每隔一个固定时间，执行该netstat命令。\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出所有端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -at "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出所有 tcp 端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -au "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出所有 udp 端口 netstat -au")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -i "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示网络接口列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# netstat 将每隔一秒输出网络信息。")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("ln在文件之间建立链接（硬链接和软链接）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 源文件 目标文件\n选项：\n-s：建立软链接文件。如果不加 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-s"')]),t._v(" 选项，则建立硬链接文件；\n-f：强制。如果目标文件已经存在，则删除目标文件后再建立链接文件；\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" /root/cangls /tmp "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#建立硬链接文件，目标文件没有写文件名，会和原名一致,也就是/tmp/cangls 是硬链接文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#比如我的文件在 /opt/cs 下面，我想在 /opt/var/cs 这个路径下面也能访问到，那么应该这样来做")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s  /opt/cs   /opt/var      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/opt/var下面不用创建cs这个目录，会自动创建,注意，软链接文件的源文件必须写成绝对路径，而不能写成相对路径（硬链接没有这样的要求）；否则软链接文件会报错。这是初学者非常容易犯的错误。")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("mount")])]),t._v(" "),a("li",[a("p",[t._v("telnet")])]),t._v(" "),a("li",[a("p",[t._v("gzip")])]),t._v(" "),a("li",[a("p",[t._v("unzip")])]),t._v(" "),a("li",[a("p",[t._v("ps 命令查看当前系统中运行的进程信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na BSD风格。显示系统中与终端try相关的所有进程的信：当与选项x一起使用时，显示所有进程的信息。\n-e 显示所有进程的信息\n-f 显示进程的所有信息\n-l 以长格式显示进程信息\nr 只显示正在运行的进程\nu 显示面向用户的格式（包括用户名、CPU及内存使用情况等信息）\nx BSD风格。显示所有非控制终端上的进程信息：当与选项a一起使用时，显示所有进程的信息。\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" aux "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示所有终端上所有用户的有关进程的所有信息：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" aux "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" node "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ps是显示当前状态处于running的进程，grep表示在这些里搜索，而ps aux是显示所有进程和其状态，此处是查找node的进程")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);